#CAESER CIPHER

def encrypt(actual_text,shift_amount):
    text=list(actual_text)
    encr_text=''
    for letter in text:
        letter_val=ord(letter)
        new_val=letter_val+shift_amount
        new_letter=chr(new_val)
        encr_text+=new_letter
    return(encr_text)

word=input("Give us the word to encrypt: ")
shift_val=int(input("Give us the shift amount for the word: "))
print(f"the encrypted word is {encrypt(word,shift_val)}")
*****************************************************************************************************************************


####CAESER CIPHER        
####METHOD 2
import string
alphabet=list(string.ascii_lowercase)

def encrypt(actual_text,shift_amount):##encryption function
    encr_text=''
    for letter in actual_text:
        letter_index=alphabet.index(letter)
        shift_value=letter_index+shift_amount
        if shift_value>25:
            shift_value%=26## 25 beause 0-25 makes 26
        encr_text+=alphabet[shift_value]
    print(f"Here is your encrypted text,do not share the encryption details: {encr_text} ")
  
word=input("enter the word that you want to encrypt: ")
shift_val=int(input("enter the shift amount you need to encrypt: "))
###############################################################################################

encrypt_text=encrypt(word,shift_val)##calling enrypt function and also storing the retured encrypted data to be passed to decode function
def decode(encrypted_text,encrypt_amount):
    decr_text=''
    for letter in encrypted_text:
        letter_index=alphabet.index(letter)
        decrypt_value=letter_index-encrypt_amount
        decr_text+=alphabet[decrypt_value]
    print(f"Here is your decrypted text,do not share the encryption details: {decr_text} ")

decode(encrypt_text,shift_val)
    
